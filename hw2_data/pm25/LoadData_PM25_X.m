function trainX = LoadData_PM25_X(filename, startRow, endRow)
%IMPORTFILE Import numeric data from a text file as a matrix.
%   TRAINX = IMPORTFILE(FILENAME) Reads data from text file FILENAME for
%   the default selection.
%
%   TRAINX = IMPORTFILE(FILENAME, STARTROW, ENDROW) Reads data from rows
%   STARTROW through ENDROW of text file FILENAME.
%
% Example:
%   trainX = importfile('train_X.txt', 2, 4213);
%
%    See also TEXTSCAN.

% Auto-generated by MATLAB on 2019/10/19 13:41:32

%% Initialize variables.
delimiter = '\t';
if nargin<=2
    startRow = 2;
    endRow = inf;
end

%% Format for each line of text:
%   column1: double (%f)
%	column2: double (%f)
%   column3: double (%f)
%	column4: double (%f)
%   column5: double (%f)
%	column6: double (%f)
%   column7: double (%f)
%	column8: double (%f)
%   column9: double (%f)
%	column10: double (%f)
%   column11: double (%f)
%	column12: double (%f)
%   column13: double (%f)
%	column14: double (%f)
%   column15: double (%f)
%	column16: double (%f)
%   column17: double (%f)
%	column18: double (%f)
%   column19: double (%f)
%	column20: double (%f)
%   column21: double (%f)
%	column22: double (%f)
%   column23: double (%f)
%	column24: double (%f)
%   column25: double (%f)
%	column26: double (%f)
%   column27: double (%f)
%	column28: double (%f)
%   column29: double (%f)
%	column30: double (%f)
%   column31: double (%f)
%	column32: double (%f)
%   column33: double (%f)
%	column34: double (%f)
%   column35: double (%f)
%	column36: double (%f)
%   column37: double (%f)
%	column38: double (%f)
%   column39: double (%f)
%	column40: double (%f)
%   column41: double (%f)
%	column42: double (%f)
%   column43: double (%f)
%	column44: double (%f)
%   column45: double (%f)
%	column46: double (%f)
%   column47: double (%f)
%	column48: double (%f)
%   column49: double (%f)
%	column50: double (%f)
%   column51: double (%f)
%	column52: double (%f)
%   column53: double (%f)
%	column54: double (%f)
%   column55: double (%f)
%	column56: double (%f)
%   column57: double (%f)
%	column58: double (%f)
%   column59: double (%f)
%	column60: double (%f)
%   column61: double (%f)
%	column62: double (%f)
%   column63: double (%f)
%	column64: double (%f)
%   column65: double (%f)
%	column66: double (%f)
%   column67: double (%f)
%	column68: double (%f)
%   column69: double (%f)
%	column70: double (%f)
%   column71: double (%f)
%	column72: double (%f)
%   column73: double (%f)
%	column74: double (%f)
%   column75: double (%f)
%	column76: double (%f)
%   column77: double (%f)
%	column78: double (%f)
%   column79: double (%f)
%	column80: double (%f)
%   column81: double (%f)
%	column82: double (%f)
%   column83: double (%f)
%	column84: double (%f)
%   column85: double (%f)
%	column86: double (%f)
%   column87: double (%f)
%	column88: double (%f)
%   column89: double (%f)
%	column90: double (%f)
%   column91: double (%f)
%	column92: double (%f)
%   column93: double (%f)
%	column94: double (%f)
%   column95: double (%f)
%	column96: double (%f)
%   column97: double (%f)
%	column98: double (%f)
%   column99: double (%f)
%	column100: double (%f)
%   column101: double (%f)
%	column102: double (%f)
%   column103: double (%f)
%	column104: double (%f)
%   column105: double (%f)
%	column106: double (%f)
%   column107: double (%f)
%	column108: double (%f)
%   column109: double (%f)
%	column110: double (%f)
%   column111: double (%f)
%	column112: double (%f)
%   column113: double (%f)
%	column114: double (%f)
%   column115: double (%f)
%	column116: double (%f)
%   column117: double (%f)
%	column118: double (%f)
%   column119: double (%f)
%	column120: double (%f)
%   column121: double (%f)
%	column122: double (%f)
%   column123: double (%f)
%	column124: double (%f)
%   column125: double (%f)
%	column126: double (%f)
%   column127: double (%f)
%	column128: double (%f)
%   column129: double (%f)
%	column130: double (%f)
%   column131: double (%f)
%	column132: double (%f)
%   column133: double (%f)
%	column134: double (%f)
%   column135: double (%f)
%	column136: double (%f)
%   column137: double (%f)
%	column138: double (%f)
%   column139: double (%f)
%	column140: double (%f)
%   column141: double (%f)
%	column142: double (%f)
%   column143: double (%f)
%	column144: double (%f)
%   column145: double (%f)
%	column146: double (%f)
%   column147: double (%f)
%	column148: double (%f)
%   column149: double (%f)
%	column150: double (%f)
%   column151: double (%f)
%	column152: double (%f)
%   column153: double (%f)
%	column154: double (%f)
%   column155: double (%f)
%	column156: double (%f)
%   column157: double (%f)
%	column158: double (%f)
%   column159: double (%f)
%	column160: double (%f)
%   column161: double (%f)
%	column162: double (%f)
%   column163: double (%f)
%	column164: double (%f)
%   column165: double (%f)
%	column166: double (%f)
%   column167: double (%f)
%	column168: double (%f)
%   column169: double (%f)
%	column170: double (%f)
%   column171: double (%f)
%	column172: double (%f)
%   column173: double (%f)
%	column174: double (%f)
%   column175: double (%f)
%	column176: double (%f)
%   column177: double (%f)
%	column178: double (%f)
%   column179: double (%f)
%	column180: double (%f)
%   column181: double (%f)
%	column182: double (%f)
%   column183: double (%f)
% For more information, see the TEXTSCAN documentation.
formatSpec = '%f%f%f%f%f%f%f%f%f%f%f%f%f%f%f%f%f%f%f%f%f%f%f%f%f%f%f%f%f%f%f%f%f%f%f%f%f%f%f%f%f%f%f%f%f%f%f%f%f%f%f%f%f%f%f%f%f%f%f%f%f%f%f%f%f%f%f%f%f%f%f%f%f%f%f%f%f%f%f%f%f%f%f%f%f%f%f%f%f%f%f%f%f%f%f%f%f%f%f%f%f%f%f%f%f%f%f%f%f%f%f%f%f%f%f%f%f%f%f%f%f%f%f%f%f%f%f%f%f%f%f%f%f%f%f%f%f%f%f%f%f%f%f%f%f%f%f%f%f%f%f%f%f%f%f%f%f%f%f%f%f%f%f%f%f%f%f%f%f%f%f%f%f%f%f%f%f%f%f%f%f%f%f%[^\n\r]';

%% Open the text file.
fileID = fopen(filename,'r');

%% Read columns of data according to the format.
% This call is based on the structure of the file used to generate this
% code. If an error occurs for a different file, try regenerating the code
% from the Import Tool.
dataArray = textscan(fileID, formatSpec, endRow(1)-startRow(1)+1, 'Delimiter', delimiter, 'TextType', 'string', 'EmptyValue', NaN, 'HeaderLines', startRow(1)-1, 'ReturnOnError', false, 'EndOfLine', '\r\n');
for block=2:length(startRow)
    frewind(fileID);
    dataArrayBlock = textscan(fileID, formatSpec, endRow(block)-startRow(block)+1, 'Delimiter', delimiter, 'TextType', 'string', 'EmptyValue', NaN, 'HeaderLines', startRow(block)-1, 'ReturnOnError', false, 'EndOfLine', '\r\n');
    for col=1:length(dataArray)
        dataArray{col} = [dataArray{col};dataArrayBlock{col}];
    end
end

%% Close the text file.
fclose(fileID);

%% Post processing for unimportable data.
% No unimportable data rules were applied during the import, so no post
% processing code is included. To generate code which works for
% unimportable data, select unimportable cells in a file and regenerate the
% script.

%% Create output variable
trainX = table(dataArray{1:end-1}, 'VariableNames', {'ID','t0date','t0hour','t1date','t1hour','t1WIND_DIREC','t1CH4','t1NMHC','t1CO','t1RH','t1WIND_SPEED','t1WD_HR','t1SO2','t1THC','t1NO','t1WS_HR','t1AMB_TEMP','t1PM10','t1O3','t1PM25','t1NOx','t1NO2','t1RAINFALL','t2date','t2hour','t2WIND_DIREC','t2CH4','t2NMHC','t2CO','t2RH','t2WIND_SPEED','t2WD_HR','t2SO2','t2THC','t2NO','t2WS_HR','t2AMB_TEMP','t2PM10','t2O3','t2PM25','t2NOx','t2NO2','t2RAINFALL','t3date','t3hour','t3WIND_DIREC','t3CH4','t3NMHC','t3CO','t3RH','t3WIND_SPEED','t3WD_HR','t3SO2','t3THC','t3NO','t3WS_HR','t3AMB_TEMP','t3PM10','t3O3','t3PM25','t3NOx','t3NO2','t3RAINFALL','t4date','t4hour','t4WIND_DIREC','t4CH4','t4NMHC','t4CO','t4RH','t4WIND_SPEED','t4WD_HR','t4SO2','t4THC','t4NO','t4WS_HR','t4AMB_TEMP','t4PM10','t4O3','t4PM25','t4NOx','t4NO2','t4RAINFALL','t5date','t5hour','t5WIND_DIREC','t5CH4','t5NMHC','t5CO','t5RH','t5WIND_SPEED','t5WD_HR','t5SO2','t5THC','t5NO','t5WS_HR','t5AMB_TEMP','t5PM10','t5O3','t5PM25','t5NOx','t5NO2','t5RAINFALL','t6date','t6hour','t6WIND_DIREC','t6CH4','t6NMHC','t6CO','t6RH','t6WIND_SPEED','t6WD_HR','t6SO2','t6THC','t6NO','t6WS_HR','t6AMB_TEMP','t6PM10','t6O3','t6PM25','t6NOx','t6NO2','t6RAINFALL','t7date','t7hour','t7WIND_DIREC','t7CH4','t7NMHC','t7CO','t7RH','t7WIND_SPEED','t7WD_HR','t7SO2','t7THC','t7NO','t7WS_HR','t7AMB_TEMP','t7PM10','t7O3','t7PM25','t7NOx','t7NO2','t7RAINFALL','t8date','t8hour','t8WIND_DIREC','t8CH4','t8NMHC','t8CO','t8RH','t8WIND_SPEED','t8WD_HR','t8SO2','t8THC','t8NO','t8WS_HR','t8AMB_TEMP','t8PM10','t8O3','t8PM25','t8NOx','t8NO2','t8RAINFALL','t9date','t9hour','t9WIND_DIREC','t9CH4','t9NMHC','t9CO','t9RH','t9WIND_SPEED','t9WD_HR','t9SO2','t9THC','t9NO','t9WS_HR','t9AMB_TEMP','t9PM10','t9O3','t9PM25','t9NOx','t9NO2','t9RAINFALL'});

